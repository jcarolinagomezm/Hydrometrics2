version: "3.8"
services:
#? Configuracion DB MySQL
  mysql:
    container_name: mysql
    image: mysql:latest
    ports:
      - "3307:3306"
    environment:
      MYSQL_ROOT_PASSWORD: root
      MYSQL_DATABASE: hydrometrics
    restart: always
    networks:
      - hydrometrics-net
  # ? Configuracion main-back
  hydrometrics-back:
    container_name: hydrometrics-back
    # image: 39d593ac322e
    build:
     context: ./hydrometrics-main-back/
     dockerfile: ./Dockerfile
    ports:
      - "8080:8080"
    environment:
      PORT: 8080
      DB_HOST: mysql
      DB_PORT: 3306
      DB_NAME: hydrometrics
      DB_USER: root
      DB_PASSWORD: root
      DATA_PROCESSOR_HOST: dataprocessor
      DATA_PROCESSOR_PROTOCOL: http
      DATA_PROCESSOR_PORT: 8081 
    networks:
      - hydrometrics-net
    depends_on:
      - mysql
    restart: always
  # ? Configuracion data-process
  dataprocessor:
    container_name: dataprocessor
    # image: 58feb5ef6a89
    build:
     context: ./data-processor/
     dockerfile: ./Dockerfile
    ports:
      - "8081:8081"
    environment:
      PORT: 8081
      DB_HOST: mysql
      DB_PORT: 3306
      DB_NAME: hydrometrics
      DB_USER: root
      DB_PASSWORD: root
    networks:
      - hydrometrics-net
    depends_on:
      - hydrometrics-back
      - mysql
    restart: always
  # ? Configuracion Front
#   meteodata:
#     container_name: meteodata
#     build:
#      context: ./hydrometric-front/
#      dockerfile: ./Dockerfile
#     ports:
#       - "80:80"
#     networks:
#       - hydrometrics-net
#     depends_on:
#       - hydrometrics-back
#     restart: always
networks:
  hydrometrics-net:
    name: hydrometrics-net

